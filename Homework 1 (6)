tv√• funktioner (input c och z)

from scipy.linalg import solve
from scipy import *
from numpy import *

def polyval(c,z):
    N=len(x)
    b=0
    for j in range(1,N+1): #want j=1,2,3 to get opposite order for c. Only want order len(x)-1 func
        b=c(x,y)[-j,0]*z**(N-j) + b
    return b
    
#c is a function of x and y. Specifically it is the solution to Vc=y where V is a function of x

def c(x,y):
    N=len(x)
    V=ones(len(x))
    for i in range(1,N):
        k=x**i
        V=column_stack((k,V))
    y=y.reshape(len(y),1)
    return solve(V,y)

x=array([1,0,2])
y=array([4,1,3])

polyval(c,5)


En funktion (input x,y,z)

from scipy.linalg import solve
from scipy import *
from numpy import *

def polyval(x,y,z):
    N=len(x)
    b=0
    def c(x,y):
        N=len(x)
        V=ones(len(x))
        for i in range(1,N):
            k=x**i
            V=column_stack((k,V))
        u=y.reshape(len(y),1)
        return solve(V,u)
    for j in range(1,N+1): #want j=1,2,3 to get opposite order for c. Only want order len(x)-1 func
        b=c(x,y)[-j,0]*z**(N-j) + b
    return b

x=array([1,0,2])
y=array([4,1,3])

polyval(x,y,5)

#can still have everything in one function and also only using c as input, but have to define y and x before like in seperate

